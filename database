Ex-1 database connection                                                                                  EX-2
import mysql.connector                                                                                        db_config = {'host':'localhost','user':'root','password':'','database':'esd_app'}
conn = mysql.connector.connect(host='localhost',user='root',password='',database='esd_app')                   conn = mysql.connector.connect(**db_config)
                                                                                                              Note- **db_config jo hai dictionary ko is form me karne ke liye use karte hai host='localhost',user='root',password='',database='esd_app' 
                                                                                                                
is_connected() = agar mai conn.is_connected() karu to ye mujhe true ya false dega. so isse check ho jayega. yaa phir hum try except ka use lar sakte hai isme
close() = connection ko close karne ke liye hum close() method ka use karenge

EX-3                                                                                                    EX-4 
import mysql.connector                                                                                      import mysql.connector
conn = mysql.connector.connect(host='localhost',user='root',password='',database='esd_app')                 try:
connected = conn.is_connected()                                                                                 conn = mysql.connector.connect(host='localhost',user='root',password='',database='esd_app')
if connected:                                                                                                   print("Database connection successful")
    print("connected to database")                                                                           except mysql.connector.Error as err:
else:                                                                                                           print("Error connecting to the database")
    print("Error connecting to database")

EX-5
# This script connects to a MySQL database and creates a table named 'user'.
# This script connects to a MySQL database and creates a table named 'user'.
import mysql.connector

conn = mysql.connector.connect(host='localhost', user='root', password='', database='esd_app')
print("Database connection successful")

try: 
    # sql = "create table student(id int auto_increment not null primary key, name varchar(50), email varchar(50), password varchar(50), phone varchar(50), address varchar(50))"
    # sql = "insert into student(name, email, password, phone, address) VALUES ('sandeep','satyendra@gmail.com','123456789','9584224133','jamuna colliery')"
    # sql = "delete from student where id=1"
    sql = "update student set name='satyendra' where id=4"
    cursor = conn.cursor()
    cursor.execute(sql)
    conn.commit()
    print("Table created successfully")
    print("row inserted", cursor.rowcount)
    print("last Row id", cursor.lastrowid)

except mysql.connector.Error as err:
    print(f"Error: {err}")

if conn.is_connected():
    cursor.close()
    conn.close()
    print("Database connection closed")

Note- commit() => commit method ka use hum karte hai jab hume inserted row ko database me save karne ke liye. otherwise no changes are made in the database. conn object ke through commit() method ka use karte hai
                   jab hum table me kuch modification karte hai tb hume iski jarurat padhti hai. agar database se kewal data ko fetch karna hai kuch modification nahi karna hai to 
                   hume commit() ka use nahi karna padhega

fetchone() method= fetchone() hume first row fetch karke deta hai. fetchone() will automatically go to the next row means if i call the fetchone() again then it gives me the next row data
# This script connects to a MySQL database and creates a table named 'user'. 
import mysql.connector
conn = mysql.connector.connect(host='localhost', user='root', password='', database='esd_app')
print("Database connection successful")
try: 
    sql = "select * from student"
    cursor = conn.cursor()
    cursor.execute(sql)
    row= cursor.fetchone()
    print(row)
    if conn.is_connected():
        cursor.close()
        conn.close()
        print("Database connection closed")
except mysql.connector.Error as err:
    print(f"Error: {err}")

# fetch all the data




